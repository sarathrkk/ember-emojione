"use strict";define("dummy/app",["exports","ember","ember-application","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,r,n,l,o){var u=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,u=r.default.extend({modulePrefix:o.default.modulePrefix,podModulePrefix:o.default.podModulePrefix,Resolver:n.default}),(0,l.default)(u,o.default.modulePrefix),e.default=u}),define("dummy/components/auto-focus",["exports","ember-auto-focus/components/auto-focus"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/click-outside",["exports","ember-click-outside/components/click-outside"],function(e,t){e.default=t.default}),define("dummy/components/emoji-picker-toggler",["exports","ember-emojione/components/emoji-picker-toggler"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker-wrapper",["exports","ember-emojione/components/emoji-picker-wrapper"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker",["exports","ember-emojione/components/emoji-picker"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/category",["exports","ember-emojione/components/emoji-picker/category"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/label",["exports","ember-emojione/components/emoji-picker/label"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-picker/tone",["exports","ember-emojione/components/emoji-picker/tone"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/emoji-typing-assistance",["exports","ember-emojione/components/emoji-typing-assistance"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/scroll-to",["exports","ember-scroll-to-mk2/components/scroll-to"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/controllers/application",["exports","ember-controller","ember-computed","ember-string"],function(e,t,r,n){e.default=t.default.extend({inputStr:"OMG! :scream:",inputStrHtmlSafe:(0,r.default)("inputStr",function(){var e=this.get("inputStr");return(0,n.htmlSafe)(e)}),actions:{emojiInserted:function(e){this.setProperties({inputStr:e})}}})}),define("dummy/helpers/and",["exports","ember","ember-truth-helpers/helpers/and"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.andHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.andHelper)),e.default=n}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment"],function(e,t,r){function n(){return l}e.appVersion=n;var l=r.default.APP.version;e.default=t.default.Helper.helper(n)}),define("dummy/helpers/eeo-and",["exports","ember-emojione/helpers/eeo-and"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoAnd",{enumerable:!0,get:function(){return t.eeoAnd}})}),define("dummy/helpers/eeo-exists",["exports","ember-emojione/helpers/eeo-exists"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoExists",{enumerable:!0,get:function(){return t.eeoExists}})}),define("dummy/helpers/eeo-html-safe",["exports","ember-emojione/helpers/eeo-html-safe"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"eeoHtmlSafe",{enumerable:!0,get:function(){return t.eeoHtmlSafe}})}),define("dummy/helpers/eq",["exports","ember","ember-truth-helpers/helpers/equal"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.equalHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.equalHelper)),e.default=n}),define("dummy/helpers/gt",["exports","ember","ember-truth-helpers/helpers/gt"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.gtHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.gtHelper)),e.default=n}),define("dummy/helpers/gte",["exports","ember","ember-truth-helpers/helpers/gte"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.gteHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.gteHelper)),e.default=n}),define("dummy/helpers/inject-emoji",["exports","ember-emojione/helpers/inject-emoji"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"injectEmoji",{enumerable:!0,get:function(){return t.injectEmoji}})}),define("dummy/helpers/is-array",["exports","ember","ember-truth-helpers/helpers/is-array"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.isArrayHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.isArrayHelper)),e.default=n}),define("dummy/helpers/is-equal",["exports","ember-truth-helpers/helpers/is-equal"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isEqual",{enumerable:!0,get:function(){return t.isEqual}})}),define("dummy/helpers/lt",["exports","ember","ember-truth-helpers/helpers/lt"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.ltHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.ltHelper)),e.default=n}),define("dummy/helpers/lte",["exports","ember","ember-truth-helpers/helpers/lte"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.lteHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.lteHelper)),e.default=n}),define("dummy/helpers/not-eq",["exports","ember","ember-truth-helpers/helpers/not-equal"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.notEqualHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.notEqualHelper)),e.default=n}),define("dummy/helpers/not",["exports","ember","ember-truth-helpers/helpers/not"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.notHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.notHelper)),e.default=n}),define("dummy/helpers/or",["exports","ember","ember-truth-helpers/helpers/or"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.orHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.orHelper)),e.default=n}),define("dummy/helpers/xor",["exports","ember","ember-truth-helpers/helpers/xor"],function(e,t,r){var n=null;t.default.Helper?n=t.default.Helper.helper(r.xorHelper):t.default.HTMLBars.makeBoundHelper&&(n=t.default.HTMLBars.makeBoundHelper(r.xorHelper)),e.default=n}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,r){var n=r.default.APP,l=n.name,o=n.version;e.default={name:"App Version",initialize:(0,t.default)(l,o)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/ember-keyboard-first-responder-inputs",["exports","ember-keyboard/initializers/ember-keyboard-first-responder-inputs"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,r){function n(){var e=arguments[1]||arguments[0];if(r.default.exportApplicationGlobal!==!1){var n;if("undefined"!=typeof window)n=window;else if("undefined"!=typeof global)n=global;else{if("undefined"==typeof self)return;n=self}var l,o=r.default.exportApplicationGlobal;l="string"==typeof o?o:t.default.String.classify(r.default.modulePrefix),n[l]||(n[l]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[l]}}))}}e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("dummy/initializers/truth-helpers",["exports","ember","ember-truth-helpers/utils/register-helper","ember-truth-helpers/helpers/and","ember-truth-helpers/helpers/or","ember-truth-helpers/helpers/equal","ember-truth-helpers/helpers/not","ember-truth-helpers/helpers/is-array","ember-truth-helpers/helpers/not-equal","ember-truth-helpers/helpers/gt","ember-truth-helpers/helpers/gte","ember-truth-helpers/helpers/lt","ember-truth-helpers/helpers/lte"],function(e,t,r,n,l,o,u,i,a,p,m,d,s){function f(){t.default.Helper||((0,r.registerHelper)("and",n.andHelper),(0,r.registerHelper)("or",l.orHelper),(0,r.registerHelper)("eq",o.equalHelper),(0,r.registerHelper)("not",u.notHelper),(0,r.registerHelper)("is-array",i.isArrayHelper),(0,r.registerHelper)("not-eq",a.notEqualHelper),(0,r.registerHelper)("gt",p.gtHelper),(0,r.registerHelper)("gte",m.gteHelper),(0,r.registerHelper)("lt",d.ltHelper),(0,r.registerHelper)("lte",s.lteHelper))}e.initialize=f,e.default={name:"truth-helpers",initialize:f}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember-router","dummy/config/environment"],function(e,t,r){var n=t.default.extend({location:r.default.locationType,rootURL:r.default.rootURL});n.map(function(){}),e.default=n}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/emoji",["exports","ember-emojione/services/emoji"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/services/keyboard",["exports","ember-keyboard/services/keyboard"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"yJH1Rxwd",block:'{"statements":[["open-element","h1",[]],["flush-element"],["text","ember-emojione demo"],["close-element"],["text","\\n\\n"],["open-element","p",[]],["flush-element"],["text","\\n  "],["open-element","a",[]],["static-attr","href","https://github.com/Deveo/ember-emojione"],["flush-element"],["text","Source on GitHub"],["close-element"],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Output"],["close-element"],["text","\\n"],["open-element","p",[]],["flush-element"],["text","\\n  "],["append",["helper",["inject-emoji"],[["get",["inputStrHtmlSafe"]]],null],true],["text","\\n"],["close-element"],["text","\\n\\n"],["open-element","h2",[]],["flush-element"],["text","Input"],["close-element"],["text","\\n"],["block",["emoji-picker-wrapper"],null,[["text","inputSelector","emojiInsertedAction"],[["get",["inputStr"]],"textarea",["helper",["action"],[["get",[null]],"emojiInserted"],null]]],0],["text","\\n"],["open-element","h2",[]],["flush-element"],["text","Source"],["close-element"],["text","\\n\\n"],["open-element","pre",[]],["flush-element"],["text","inputStr: \'OMG! :scream:\',\\n\\ninputStrHtmlSafe: computed(\'inputStr\', function () {\\n  const inputStr = this.get(\'inputStr\');\\n  return htmlSafe(inputStr);\\n}),\\n\\nactions: {\\n  emojiInserted(inputStr) {\\n    this.setProperties({inputStr});\\n  }\\n}\\n\\n"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n\\n{{#emoji-picker-wrapper\\n  text                = wikiPageText\\n  inputSelector       = \\"textarea\\"\\n  emojiInsertedAction = (action \'emojiInserted\')\\n  as |emojiPicker emojiPickerToggler|\\n}}\\n  {{textarea value=inputStr}}\\n\\n  <span class=\\"togglePickerWrapper\\">\\n    {{component emojiPickerToggler\\n      label         = \\"😀\\"\\n      labelWhenOpen = \\"😆\\"\\n      tagName       = \\"a\\"\\n      href          = \\"\\"\\n    }}\\n\\n    {{component emojiPicker}}\\n  </span>\\n{{/emoji-picker-wrapper}}"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["open-element","span",[]],["static-attr","style","position: relative; display: inline-block;"],["flush-element"],["text","\\n    "],["append",["helper",["textarea"],null,[["value"],[["get",["inputStr"]]]]],false],["text","\\n    "],["append",["helper",["component"],[["get",["emojiAssist"]]],null],false],["text","\\n  "],["close-element"],["text","\\n\\n\\n  "],["open-element","span",[]],["static-attr","class","togglePickerWrapper"],["flush-element"],["text","\\n    "],["append",["helper",["component"],[["get",["emojiPickerToggler"]]],[["label","labelWhenOpen","tagName","href"],["😀","😆","a",""]]],false],["text","\\n\\n    "],["append",["helper",["component"],[["get",["emojiPicker"]]],null],false],["text","\\n  "],["close-element"],["text","\\n"]],"locals":["emojiPicker","emojiPickerToggler","emojiAssist"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/utils/get-cmd-key",["exports","ember-keyboard/utils/get-cmd-key"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/utils/listener-name",["exports","ember-keyboard/utils/listener-name"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var r=t+"/config/environment",n=document.querySelector('meta[name="'+r+'"]').getAttribute("content"),l=JSON.parse(unescape(n)),o={default:l};return Object.defineProperty(o,"__esModule",{value:!0}),o}catch(e){throw new Error('Could not read config from meta tag with name "'+r+'".')}}),runningTests||require("dummy/app").default.create({name:"ember-emojione",version:"0.3.1+24277727"});